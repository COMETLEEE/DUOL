//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 gWorldViewProj;            // Offset:    0, size:   64
    float4  gColor;                     // Offset:   64, size:   16
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 ColorTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldViewProj;           // Offset:    0 Size:    64
                //   float4 gColor;                     // Offset:   64 Size:    16
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[5], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.PosL.x; v0.y <- vin.PosL.y; v0.z <- vin.PosL.z; 
                //   o1.x <- <VS return value>.Color.x; o1.y <- <VS return value>.Color.y; o1.z <- <VS return value>.Color.z; o1.w <- <VS return value>.Color.w; 
                //   o0.x <- <VS return value>.PosH.x; o0.y <- <VS return value>.PosH.y; o0.z <- <VS return value>.PosH.z; o0.w <- <VS return value>.PosH.w
                //
                #line 31 "E:\GA3rdFinalProject_DUOL\5_Project\DUOLEffectEditor\EffectToolDemo\GraphicsEngine\Shader\FX\wire.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.PosH.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.PosH.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.PosH.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- vout.PosH.w
                
                #line 35
                mov r0.xyzw, cb0[4].xyzw  // r0.x <- vout.Color.x; r0.y <- vout.Color.y; r0.z <- vout.Color.z; r0.w <- vout.Color.w
                
                #line 37
                mov o0.xyzw, r1.xyzw
                mov o1.xyzw, r0.xyzw
                ret 
                // Approximately 10 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // COLOR                    0   xyzw        1     NONE   float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                // SV_Target                1   xyzw        1   TARGET   float   xyzw
                // SV_Target                2   xyzw        2   TARGET   float   xyzw
                // SV_Target                3   xyzw        3   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_input_ps linear v1.xyzw
                dcl_output o0.xyzw
                dcl_output o1.xyzw
                dcl_output o2.xyzw
                dcl_output o3.xyzw
                dcl_temps 4
                //
                // Initial variable locations:
                //   v0.x <- pin.PosH.x; v0.y <- pin.PosH.y; v0.z <- pin.PosH.z; v0.w <- pin.PosH.w; 
                //   v1.x <- pin.Color.x; v1.y <- pin.Color.y; v1.z <- pin.Color.z; v1.w <- pin.Color.w; 
                //   o3.x <- <PS return value>.Albedo.x; o3.y <- <PS return value>.Albedo.y; o3.z <- <PS return value>.Albedo.z; o3.w <- <PS return value>.Albedo.w; 
                //   o2.x <- <PS return value>.Position.x; o2.y <- <PS return value>.Position.y; o2.z <- <PS return value>.Position.z; o2.w <- <PS return value>.Position.w; 
                //   o1.x <- <PS return value>.Normal.x; o1.y <- <PS return value>.Normal.y; o1.z <- <PS return value>.Normal.z; o1.w <- <PS return value>.Normal.w; 
                //   o0.x <- <PS return value>.Depth.x; o0.y <- <PS return value>.Depth.y; o0.z <- <PS return value>.Depth.z; o0.w <- <PS return value>.Depth.w
                //
                #line 43 "E:\GA3rdFinalProject_DUOL\5_Project\DUOLEffectEditor\EffectToolDemo\GraphicsEngine\Shader\FX\wire.fx"
                mov r0.xyzw, l(0,0,0,0)  // r0.x <- _PSOut.Depth.x; r0.y <- _PSOut.Depth.y; r0.z <- _PSOut.Depth.z; r0.w <- _PSOut.Depth.w
                
                #line 44
                mov r1.xyzw, l(0,0,0,0)  // r1.x <- _PSOut.Normal.x; r1.y <- _PSOut.Normal.y; r1.z <- _PSOut.Normal.z; r1.w <- _PSOut.Normal.w
                
                #line 45
                mov r2.xyzw, l(0,0,0,0)  // r2.x <- _PSOut.Position.x; r2.y <- _PSOut.Position.y; r2.z <- _PSOut.Position.z; r2.w <- _PSOut.Position.w
                
                #line 46
                mov r3.xyzw, v1.xyzw  // r3.x <- _PSOut.Albedo.x; r3.y <- _PSOut.Albedo.y; r3.z <- _PSOut.Albedo.z; r3.w <- _PSOut.Albedo.w
                
                #line 47
                mov o0.xyzw, r0.xyzw
                mov o1.xyzw, r1.xyzw
                mov o2.xyzw, r2.xyzw
                mov o3.xyzw, r3.xyzw
                ret 
                // Approximately 9 instruction slots used
                            
            };
        }

    }

}

